'use client';

import { useEffect, useState, useCallback } from 'react';
import { useRouter } from 'next/navigation';
import { useAuth, AuthProvider } from '../../context/AuthContext';
import { menuService, reservationService } from '../../services/api';

export default function Dashboard() {
  return (
    <AuthProvider>
      <DashboardContent />
    </AuthProvider>
  );
}

function DashboardContent() {
  const { user, loading: authLoading } = useAuth();
  const router = useRouter();
  const [stats, setStats] = useState({
    menuItems: 0,
    pendingReservations: 0,
    completedReservations: 0,
    todayReservations: 0
  });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [recentReservations, setRecentReservations] = useState([]);
  const [refreshing, setRefreshing] = useState(false);
  const [lastUpdated, setLastUpdated] = useState(new Date());

  useEffect(() => {
    // Redirect if not logged in
    if (!authLoading && !user) {
      router.push('/admin');
    }
  }, [user, authLoading, router]);
    // Create a memoized fetch data function
  const fetchDashboardData = useCallback(async () => {
    setLoading(true);
    try {
      // Fetch menu items count (with error handling)
      let menuItems = [];
      try {
        const menuResponse = await menuService.getAllItems();
        menuItems = Array.isArray(menuResponse) ? menuResponse : 
          (menuResponse.data ? menuResponse.data : []);
      } catch (menuError) {
        console.error('Error fetching menu items:', menuError);
        // Continue with empty array if this specific request fails
      }
      
      // Fetch reservations (with error handling)
      let reservations = [];
      try {
        const reservationResponse = await reservationService.getAllReservations();
        reservations = Array.isArray(reservationResponse) ? reservationResponse : 
          (reservationResponse.data ? reservationResponse.data : []);
      } catch (reservationError) {
        console.error('Error fetching reservations:', reservationError);
        // Continue with empty array if this specific request fails
      }
      
      // Calculate stats
      const pendingReservations = reservations.filter(res => res.status === 'pending').length;
      const completedReservations = reservations.filter(res => res.status === 'completed').length;
      
      // Calculate today's reservations
      const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD
      const todayReservations = reservations.filter(res => res.date === today).length;
      
      // Get 5 most recent reservations
      const sortedReservations = [...reservations].sort((a, b) => 
        new Date(b.createdAt || b.date) - new Date(a.createdAt || a.date)
      ).slice(0, 5);
      
      setRecentReservations(sortedReservations);
      setStats({
        menuItems: menuItems.length,
        pendingReservations,
        completedReservations,
        todayReservations
      });
      
      setLastUpdated(new Date());
      setError(null);
    } catch (err) {
      console.error('Error fetching dashboard data:', err);
      setError('Failed to load dashboard data. ' + (err.message || ''));
      
      // Fallback to sample data
      setStats({
        menuItems: 9,
        pendingReservations: 5,
        completedReservations: 12,
        todayReservations: 3
      });
      
      // Fallback sample reservations
      setRecentReservations([
        {
          id: '1',
          name: 'John Doe',
          date: '2025-05-15',
          time: '7:00 PM',
          guests: 4,
          status: 'pending',
          createdAt: '2025-05-14T15:30:00Z'
        },
        {
          id: '2',
          name: 'Jane Smith',
          date: '2025-05-15',
          time: '8:30 PM',
          guests: 2,
          status: 'confirmed',
          createdAt: '2025-05-14T14:45:00Z'
        },
        {
          id: '3',
          name: 'Robert Johnson',
          date: '2025-05-16',
          time: '6:30 PM',
          guests: 6,
          status: 'pending',
          createdAt: '2025-05-14T13:15:00Z'
        }
      ]);
    } finally {
      setLoading(false);
    }
  }, []);

  // Fetch dashboard stats from API
  useEffect(() => {
    if (authLoading || !user) return;
    fetchDashboardData();
  }, [user, authLoading, fetchDashboardData]);
  
  const handleRefresh = async () => {
    if (refreshing) return;
    
    setRefreshing(true);
    try {
      await fetchDashboardData();
    } catch (err) {
      console.error('Error refreshing dashboard data:', err);
      setError('Failed to refresh data: ' + (err.message || ''));
    } finally {
      setRefreshing(false);
    }
  };
  if (authLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800">
        <div className="relative">
          <div className="w-20 h-20 bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 rounded-full animate-spin opacity-20 blur-xl"></div>
          <div className="absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center">
            <div className="w-16 h-16 border-4 border-t-transparent border-l-transparent border-r-transparent border-b-indigo-500 rounded-full animate-spin"></div>
          </div>
          <div className="absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center">
            <div className="w-12 h-12 border-4 border-t-transparent border-l-transparent border-r-purple-500 border-b-transparent rounded-full animate-spin animation-delay-150"></div>
          </div>
          <div className="absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center">
            <div className="w-8 h-8 border-4 border-t-pink-500 border-l-transparent border-r-transparent border-b-transparent rounded-full animate-spin animation-delay-300"></div>
          </div>
        </div>
      </div>
    );
  }

  return (
      <div className="max-w-7xl mx-auto px-4 sm:px-6 py-10 bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 min-h-screen transition-all duration-300">
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-10">
          <div className="animate-fadeIn">
            <h1 className="text-3xl md:text-5xl font-black text-transparent bg-clip-text bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 dark:from-indigo-400 dark:via-purple-400 dark:to-pink-300">
              Admin Dashboard
            </h1>
            <p className="mt-1 text-gray-600 dark:text-gray-300 font-medium tracking-wide">Manage your restaurant data and reservations</p>
          </div>
          <div className="mt-4 md:mt-0 flex items-center backdrop-blur-sm bg-white/30 dark:bg-black/20 p-2 px-4 rounded-full shadow-sm">
            <span className="text-sm text-gray-600 dark:text-gray-300 mr-3 font-medium">
              Last updated: {lastUpdated.toLocaleTimeString()}
            </span>
            <button 
              onClick={handleRefresh} 
              disabled={refreshing}
              className="inline-flex items-center px-5 py-2.5 text-sm font-medium rounded-full text-white bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 hover:from-indigo-600 hover:via-purple-600 hover:to-pink-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
            >
              {refreshing ? (
                <>
                  <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  <span className="animate-pulse">Refreshing...</span>
                </>
              ) : (
                <>
                  <svg className="w-4 h-4 mr-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                  </svg>
                  Refresh
                </>
              )}
            </button>
          </div>
        </div>

        {error && (
          <div className="mb-8 bg-gradient-to-r from-red-50 to-red-100 dark:from-red-900/30 dark:to-red-800/20 p-5 rounded-2xl shadow-xl backdrop-blur-sm animate-fadeIn border border-red-200 dark:border-red-800/50">
            <div className="flex">
              <div className="flex-shrink-0 bg-red-500 p-2 rounded-full">
                <svg className="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
                </svg>
              </div>
              <div className="ml-4 my-auto">
                <p className="text-base font-medium text-red-700 dark:text-red-200">{error}</p>
              </div>
              <button className="ml-auto bg-red-200 dark:bg-red-800 rounded-full p-1 hover:bg-red-300 dark:hover:bg-red-700 transition-colors duration-200">
                <svg className="h-5 w-5 text-red-500 dark:text-red-200" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clipRule="evenodd" />
                </svg>
              </button>
            </div>
          </div>
        )}
      
        {/* Stats Overview */}
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8 mb-10">
          <div className="bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 overflow-hidden border border-gray-100/50 dark:border-gray-700/50 transform hover:-translate-y-1 group">
            <div className="relative">
              <div className="absolute inset-0 bg-gradient-to-br from-indigo-500/10 to-indigo-600/5 dark:from-indigo-500/5 dark:to-indigo-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-t-2xl"></div>
              <div className="p-6 relative">
                <div className="flex items-center">
                  <div className="p-3 rounded-2xl bg-gradient-to-br from-indigo-400 to-indigo-600 text-white shadow-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                  </div>
                  <div className="ml-4">
                    <h2 className="text-lg font-bold text-gray-800 dark:text-gray-100">Menu Items</h2>
                    {loading ? (
                      <div className="mt-2 h-8 w-16 bg-gray-200 dark:bg-gray-700 rounded-lg animate-pulse"></div>
                    ) : (
                      <p className="mt-2 text-4xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500">{stats.menuItems}</p>
                    )}
                  </div>
                </div>
              </div>
            </div>
            <div className="bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-indigo-900/10 dark:to-purple-900/10 px-6 py-4">
              <a 
                href="/admin/menu" 
                className="text-sm text-indigo-600 dark:text-indigo-400 font-medium hover:text-purple-700 dark:hover:text-purple-300 flex items-center transition-all duration-300 group-hover:pl-1"
              >
                Manage Menu
                <svg className="ml-1 w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                </svg>
              </a>
            </div>
          </div>
          <div className="bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 overflow-hidden border border-gray-100/50 dark:border-gray-700/50 transform hover:-translate-y-1 group">
            <div className="relative">
              <div className="absolute inset-0 bg-gradient-to-br from-blue-500/10 to-blue-600/5 dark:from-blue-500/5 dark:to-blue-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-t-2xl"></div>
              <div className="p-6 relative">
                <div className="flex items-center">
                  <div className="p-3 rounded-2xl bg-gradient-to-br from-blue-400 to-blue-600 text-white shadow-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                  </div>
                  <div className="ml-4">
                    <h2 className="text-lg font-bold text-gray-800 dark:text-gray-100">Pending</h2>
                    {loading ? (
                      <div className="mt-2 h-8 w-16 bg-gray-200 dark:bg-gray-700 rounded-lg animate-pulse"></div>
                    ) : (
                      <p className="mt-2 text-4xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 via-blue-500 to-cyan-500">{stats.pendingReservations}</p>
                    )}
                  </div>
                </div>
              </div>
            </div>
            <div className="bg-gradient-to-r from-blue-50 to-cyan-50 dark:from-blue-900/10 dark:to-cyan-900/10 px-6 py-4">
              <a 
                href="/admin/reservations" 
                className="text-sm text-blue-600 dark:text-blue-400 font-medium hover:text-blue-700 dark:hover:text-blue-300 flex items-center transition-all duration-300 group-hover:pl-1"
              >
                View Pending
                <svg className="ml-1 w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                </svg>
              </a>
            </div>
          </div>
          <div className="bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 overflow-hidden border border-gray-100/50 dark:border-gray-700/50 transform hover:-translate-y-1 group">
            <div className="relative">
              <div className="absolute inset-0 bg-gradient-to-br from-green-500/10 to-green-600/5 dark:from-green-500/5 dark:to-green-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-t-2xl"></div>
              <div className="p-6 relative">
                <div className="flex items-center">
                  <div className="p-3 rounded-2xl bg-gradient-to-br from-green-400 to-green-600 text-white shadow-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div className="ml-4">
                    <h2 className="text-lg font-bold text-gray-800 dark:text-gray-100">Completed</h2>
                    {loading ? (
                      <div className="mt-2 h-8 w-16 bg-gray-200 dark:bg-gray-700 rounded-lg animate-pulse"></div>
                    ) : (
                      <p className="mt-2 text-4xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-green-400 via-green-500 to-emerald-500">{stats.completedReservations}</p>
                    )}
                  </div>
                </div>
              </div>
            </div>
            <div className="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/10 dark:to-emerald-900/10 px-6 py-4">
              <a 
                href="/admin/reservations" 
                className="text-sm text-green-600 dark:text-green-400 font-medium hover:text-green-700 dark:hover:text-green-300 flex items-center transition-all duration-300 group-hover:pl-1"
              >
                View History
                <svg className="ml-1 w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                </svg>
              </a>
            </div>
          </div>
          <div className="bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 overflow-hidden border border-gray-100/50 dark:border-gray-700/50 transform hover:-translate-y-1 group">
            <div className="relative">
              <div className="absolute inset-0 bg-gradient-to-br from-purple-500/10 to-purple-600/5 dark:from-purple-500/5 dark:to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-t-2xl"></div>
              <div className="p-6 relative">
                <div className="flex items-center">
                  <div className="p-3 rounded-2xl bg-gradient-to-br from-purple-400 to-purple-600 text-white shadow-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                  </div>
                  <div className="ml-4">
                    <h2 className="text-lg font-bold text-gray-800 dark:text-gray-100">Today</h2>
                    {loading ? (
                      <div className="mt-2 h-8 w-16 bg-gray-200 dark:bg-gray-700 rounded-lg animate-pulse"></div>
                    ) : (
                      <p className="mt-2 text-4xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-purple-500 via-purple-500 to-fuchsia-500">{stats.todayReservations}</p>
                    )}
                  </div>
                </div>
              </div>
            </div>
            <div className="bg-gradient-to-r from-purple-50 to-fuchsia-50 dark:from-purple-900/10 dark:to-fuchsia-900/10 px-6 py-4">
              <a 
                href="/admin/reservations" 
                className="text-sm text-purple-600 dark:text-purple-400 font-medium hover:text-purple-700 dark:hover:text-purple-300 flex items-center transition-all duration-300 group-hover:pl-1"
              >
                Today's Bookings
                <svg className="ml-1 w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                </svg>
              </a>
            </div>
          </div>
        </div>
      
        {/* Recent Reservations */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2">
            <div className="bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-2xl shadow-xl overflow-hidden border border-gray-100/50 dark:border-gray-700/50 transition-all duration-300 hover:shadow-2xl">
              <div className="px-6 py-5 border-b border-gray-200/50 dark:border-gray-700/50 bg-gradient-to-r from-gray-50/80 to-white/80 dark:from-gray-800/80 dark:to-gray-800/80">
                <h3 className="text-xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 dark:from-indigo-400 dark:via-purple-400 dark:to-pink-300">Recent Reservations</h3>
              </div>
              <div className="p-6">
                {loading ? (
                  <div className="space-y-4">
                    {[1, 2, 3].map((item) => (
                      <div key={item} className="animate-pulse">
                        <div className="h-4 bg-gray-200 dark:bg-gray-700 rounded-full w-3/4 mb-2"></div>
                        <div className="h-3 bg-gray-200 dark:bg-gray-700 rounded-full w-1/2"></div>
                      </div>
                    ))}
                  </div>
                ) : recentReservations.length > 0 ? (
                  <div className="space-y-4">
                    {recentReservations.map((reservation) => (
                      <div key={reservation.id} className="p-4 bg-gradient-to-r from-gray-50/50 to-white/50 dark:from-gray-800/30 dark:to-gray-800/40 rounded-xl hover:bg-white/70 dark:hover:bg-gray-700/50 transition-all duration-300 backdrop-blur-sm border border-gray-100/30 dark:border-gray-700/30 hover:border-gray-200/50 dark:hover:border-gray-600/50 shadow-sm hover:shadow-md group">
                        <div className="flex flex-col sm:flex-row justify-between sm:items-center gap-4">
                          <div>
                            <div className="flex flex-wrap items-center mb-2">
                              <span className="font-bold text-gray-900 dark:text-white text-lg">{reservation.name}</span>
                              <span className={`ml-2 px-4 py-1 text-xs font-semibold rounded-full shadow-sm ${
                                reservation.status === 'pending' 
                                  ? 'bg-gradient-to-r from-amber-300 to-amber-500 text-white' 
                                  : reservation.status === 'completed' 
                                  ? 'bg-gradient-to-r from-emerald-300 to-emerald-500 text-white'
                                  : 'bg-gradient-to-r from-sky-300 to-sky-500 text-white'
                              }`}>
                                {reservation.status}
                              </span>
                            </div>
                            <div className="text-sm text-gray-600 dark:text-gray-300">
                              <div className="flex items-center">
                                <div className="p-1 rounded-lg bg-indigo-100 dark:bg-indigo-900/30 mr-2">
                                  <svg className="w-4 h-4 text-indigo-500 dark:text-indigo-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                  </svg>
                                </div>
                                {reservation.date} at {reservation.time}
                              </div>
                              <div className="flex items-center mt-2">
                                <div className="p-1 rounded-lg bg-purple-100 dark:bg-purple-900/30 mr-2">
                                  <svg className="w-4 h-4 text-purple-500 dark:text-purple-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                                  </svg>
                                </div>
                                <span className="font-medium">{reservation.guests}</span> {reservation.guests === 1 ? 'guest' : 'guests'}
                              </div>
                            </div>
                          </div>
                          <a 
                            href={`/admin/reservations?id=${reservation.id}`} 
                            className="px-5 py-2 text-sm font-medium text-white bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 hover:from-indigo-600 hover:via-purple-600 hover:to-pink-600 rounded-full transition-all duration-300 shadow-md hover:shadow-lg transform group-hover:-translate-y-0.5 flex items-center justify-center sm:justify-start gap-2"
                          >
                            <span>View Details</span>
                            <svg className="w-4 h-4 transform group-hover:translate-x-0.5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                            </svg>
                          </a>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8">
                    <svg className="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    <p className="mt-2 text-sm text-gray-500 dark:text-gray-400">No recent reservations</p>
                  </div>
                )}
                <div className="mt-8 text-center">
                  <a 
                    href="/admin/reservations" 
                    className="inline-flex items-center px-8 py-3 text-sm font-medium text-white bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 hover:from-indigo-600 hover:via-purple-600 hover:to-pink-600 rounded-full transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 hover:scale-105 group"
                  >
                    <span>View all reservations</span>
                    <svg className="ml-2 w-4 h-4 transform group-hover:translate-x-0.5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          </div>
        
          {/* Quick Actions */}
          <div className="lg:col-span-1">
            <div className="bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-2xl shadow-xl overflow-hidden border border-gray-100/50 dark:border-gray-700/50 hover:shadow-2xl transition-all duration-300">
              <div className="px-6 py-5 border-b border-gray-200/50 dark:border-gray-700/50 bg-gradient-to-r from-gray-50/80 to-white/80 dark:from-gray-800/80 dark:to-gray-800/80">
                <h3 className="text-xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 dark:from-indigo-400 dark:via-purple-400 dark:to-pink-300">Quick Actions</h3>
              </div>
              <div className="p-6">
                <nav className="space-y-4">
                  <a 
                    href="/admin/menu" 
                    className="flex items-center p-4 rounded-2xl bg-gradient-to-r from-gray-50/70 to-white/70 dark:from-gray-800/40 dark:to-gray-800/60 shadow hover:shadow-lg text-gray-700 dark:text-gray-200 transition-all duration-300 border border-gray-100/50 dark:border-gray-700/50 hover:border-indigo-200 dark:hover:border-indigo-900/50 transform hover:-translate-y-0.5 group"
                  >
                    <div className="p-3 rounded-2xl bg-gradient-to-br from-indigo-400 to-indigo-600 text-white shadow-lg group-hover:shadow-xl transition-all duration-300">
                      <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                      </svg>
                    </div>
                    <div className="ml-4">
                      <p className="font-bold text-lg text-gray-900 dark:text-white">Add Menu Item</p>
                      <p className="text-sm font-medium text-gray-600 dark:text-gray-300">Create new menu items</p>
                    </div>
                  </a>
                
                  <a 
                    href="/admin/reservations" 
                    className="flex items-center p-4 rounded-2xl bg-gradient-to-r from-gray-50/70 to-white/70 dark:from-gray-800/40 dark:to-gray-800/60 shadow hover:shadow-lg text-gray-700 dark:text-gray-200 transition-all duration-300 border border-gray-100/50 dark:border-gray-700/50 hover:border-blue-200 dark:hover:border-blue-900/50 transform hover:-translate-y-0.5 group"
                  >
                    <div className="p-3 rounded-2xl bg-gradient-to-br from-blue-400 to-blue-600 text-white shadow-lg group-hover:shadow-xl transition-all duration-300">
                      <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                    </div>
                    <div className="ml-4">
                      <p className="font-bold text-lg text-gray-900 dark:text-white">Manage Reservations</p>
                      <p className="text-sm font-medium text-gray-600 dark:text-gray-300">View and update bookings</p>
                    </div>
                  </a>
                
                  <a 
                    href="#" 
                    className="flex items-center p-4 rounded-2xl bg-gradient-to-r from-gray-50/70 to-white/70 dark:from-gray-800/40 dark:to-gray-800/60 shadow hover:shadow-lg text-gray-700 dark:text-gray-200 transition-all duration-300 border border-gray-100/50 dark:border-gray-700/50 hover:border-green-200 dark:hover:border-green-900/50 transform hover:-translate-y-0.5 group"
                  >
                    <div className="p-3 rounded-2xl bg-gradient-to-br from-green-400 to-green-600 text-white shadow-lg group-hover:shadow-xl transition-all duration-300">
                      <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                      </svg>
                    </div>
                    <div className="ml-4">
                      <p className="font-bold text-lg text-gray-900 dark:text-white">Generate Reports</p>
                      <p className="text-sm font-medium text-gray-600 dark:text-gray-300">View sales and analytics</p>
                    </div>
                  </a>
                
                  <div className="mt-6 pt-6 border-t border-gray-200/50 dark:border-gray-700/50">
                    <a 
                      href="/" 
                      target="_blank"
                      className="flex items-center p-4 rounded-2xl bg-gradient-to-r from-gray-50/70 to-white/70 dark:from-gray-800/40 dark:to-gray-800/60 shadow hover:shadow-lg text-gray-700 dark:text-gray-200 transition-all duration-300 border border-gray-100/50 dark:border-gray-700/50 hover:border-pink-200 dark:hover:border-pink-900/50 transform hover:-translate-y-0.5 group"
                    >
                      <div className="p-3 rounded-2xl bg-gradient-to-br from-pink-400 to-pink-600 text-white shadow-lg group-hover:shadow-xl transition-all duration-300">
                        <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                        </svg>
                      </div>
                      <div className="ml-4">
                        <p className="font-bold text-lg text-gray-900 dark:text-white">View Website</p>
                        <p className="text-sm font-medium text-gray-600 dark:text-gray-300">Preview the customer view</p>
                      </div>
                    </a>
                  </div>
                </nav>
              </div>
            </div>
          </div>
        </div>
      </div>
  );
}
